;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <string.h>
;
;#define C1 PIND.2
;#define C2 PIND.1
;#define C3 PIND.0
;
;#define A PORTD.3
;#define B PORTD.4
;#define C PORTD.5
;#define D PORTD.6
;
;#define correct_pass PORTD.7
;#define MAX_PASSWORDS 20
;#define MAX_SAVE  50
;#define PASSWORD_LENGTH 5
;
;int time = 0, delay = 0, password_count = 6, save_count = 0;
;char passwords[MAX_PASSWORDS][PASSWORD_LENGTH] =
;    {"0000", "1234", "4321", "1111", "1380", "1382"};

	.DSEG
;char Seconds[MAX_SAVE], Minutes[MAX_SAVE], Hours[MAX_SAVE],
;    one[MAX_SAVE], two[MAX_SAVE], three[MAX_SAVE], four[MAX_SAVE],
;    mode = 0, entered_password[PASSWORD_LENGTH] = "";
;
;
;unsigned char ReadKeypad(void) {
; 0000 001B unsigned char ReadKeypad(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001C     unsigned char result = 10;
; 0000 001D     PORTD = 0x7F;
;PCODE: $0000000F VOL: 0
;	result -> R17
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001E 
; 0000 001F     A = 0;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0020     delay_ms(3);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0021     if (C1 == 0) {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0022         result = '1';
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0023         while (C1 == 0);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0024     }
; 0000 0025     if (C2 == 0) {
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0026         result = '2';
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0027         while (C2 == 0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0028     }
; 0000 0029     if (C3 == 0) {
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002A         result = '3';
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002B         while (C3 == 0);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 002C     }
; 0000 002D     A = 1;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 002E 
; 0000 002F     B = 0;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0030     delay_ms(3);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0031     if (C1 == 0){
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0032         result = '4';
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0033         while (C1 == 0);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0034     }
; 0000 0035     if (C2 == 0) {
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0036         result = '5';
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0037         while (C2 == 0);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0038     }
; 0000 0039     if (C3 == 0) {
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 003A         result = '6';
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 003B         while (C3 == 0) ;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 003C     }
; 0000 003D     B = 1;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 003E 
; 0000 003F     C = 0;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0040     delay_ms(3);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0041     if (C1 == 0) {
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0042         result = '7';
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0043         while (C1 == 0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0044     }
; 0000 0045     if (C2 == 0) {
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0046         result = '8';
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0047         while (C2 == 0);
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0048     }
; 0000 0049     if (C3 == 0) {
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 004A         result = '9';
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 004B         while (C3 == 0);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 004C     }
; 0000 004D     C = 1;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 004E 
; 0000 004F     D = 0;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0050     delay_ms(3);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0051     if (C1 == 0) {
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0052         result = '*';
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0053         while (C1 == 0);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0054     }
; 0000 0055     if (C2 == 0) {
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0056         result = '0';
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0057         while (C2 == 0);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0058     }
; 0000 0059     if (C3 == 0) {
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 005A         result = '#';
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 005B         while (C3 == 0);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 005C     }
; 0000 005D     D = 1;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 005E 
; 0000 005F     return result;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0060 }
;PCODE: $000000C3 VOL: 0
;
;void display_time(char second, char minute, char hour, char ok) {
; 0000 0062 void display_time(char second, char minute, char hour, char ok) {
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0063     unsigned char second_ones = second % 10;
; 0000 0064     unsigned char second_tens = second / 10;
; 0000 0065 
; 0000 0066     unsigned char minute_ones = minute % 10;
; 0000 0067     unsigned char minute_tens = minute / 10;
; 0000 0068 
; 0000 0069     unsigned char hour_ones = hour % 10;
; 0000 006A     unsigned char hour_tens = hour / 10;
; 0000 006B 
; 0000 006C     if (!delay || ok) {
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;	second -> Y+9
;	minute -> Y+8
;	hour -> Y+7
;	ok -> Y+6
;	second_ones -> R17
;	second_tens -> R16
;	minute_ones -> R19
;	minute_tens -> R18
;	hour_ones -> R21
;	hour_tens -> R20
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 006D         PORTC = (second_ones << 4) | second_tens;
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 006E         PORTA = (minute_tens << 4) | minute_ones;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 006F         PORTB = (hour_tens << 4) | hour_ones;
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0070     }
; 0000 0071 }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;
;void save_progress(void) {
; 0000 0073 void save_progress(void) {
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0074     Seconds[save_count] = time % 60;
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0075     Minutes[save_count] = (time / 60) % 60;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 0076     Hours[save_count] = (time / 3600) % 24;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 0077     four[save_count] = entered_password[0] - '0';
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 0078     three[save_count] = entered_password[1] - '0';
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 0079     two[save_count] = entered_password[2] - '0';
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 007A     one[save_count] = entered_password[3] - '0';
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 007B     save_count++;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 007C }
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;
;interrupt [TIM1_COMPA] void timer1_compa_isr(void) {
; 0000 007E interrupt [8] void timer1_compa_isr(void) {
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 007F     time++;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 0080     if (time == 86400)
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 0081         PORTA = PORTB = PORTC = time = 0;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0000 0082     else
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0083         display_time(time % 60, (time / 60) % 60, (time / 3600) % 24, 0);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0084 }
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;
;void main(void) {
; 0000 0086 void main(void) {
;PCODE: $00000162 VOL: 0
; 0000 0087     unsigned char keypad, entered, i, j = 0;
; 0000 0088 
; 0000 0089     DDRA = DDRB = DDRC = 0xFF;
;	keypad -> R17
;	entered -> R16
;	i -> R19
;	j -> R18
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 008A     DDRD = 0xF8;
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 008B 
; 0000 008C     TCCR1A = 0x00;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 008D     TCCR1B = 0x0C;
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 008E     OCR1AH = 0x7A;
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 008F     OCR1AL = 0x12;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 0090 
; 0000 0091     TIMSK = 0x10;
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 0092 
; 0000 0093     #asm("sei")
;PCODE: $00000175 VOL: 0
	sei
;PCODE: $00000176 VOL: 0
; 0000 0094 
; 0000 0095     PORTA = PORTB = PORTC = time;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 0096     PORTD = 0X7F;
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 0097 
; 0000 0098     while (1) {
;PCODE: $0000017D VOL: 0
; 0000 0099         keypad = ReadKeypad();
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 009A 
; 0000 009B         if (keypad == '*') {
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 009C             delay = mode = 1;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
; 0000 009D             PORTA = PORTB = PORTC = 0xAA;
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 009E             j = 0;
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 009F             entered_password[0] = '\0';
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00A0             continue;
;PCODE: $0000018F VOL: 0
; 0000 00A1         }
; 0000 00A2 
; 0000 00A3         else if (keypad == '#') {
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00A4             delay = 1; mode = 2;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00A5             for (i = 0; i < save_count; i++) {
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00A6                 PORTA = PORTB = PORTC = 0xFF;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00A7                 delay_ms(1500);
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00A8                 PORTA = (two[i] << 4) | one[i];
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00A9                 PORTB = (four[i] << 4) | three[i];
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00AA                 PORTC = 0xAA;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00AB                 delay_ms(3000);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00AC                 display_time(Seconds[i], Minutes[i], Hours[i], 1);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 00AD                 delay_ms(3000);
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 00AE             }
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00AF             delay = mode = 0;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 00B0         }
; 0000 00B1 
; 0000 00B2         else if (keypad != 10) {
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 00B3             if (j < (PASSWORD_LENGTH - 1)) {
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 00B4                 entered_password[j] = keypad;
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 00B5                 j++;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 00B6             }
; 0000 00B7             if (j == 4) {
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 00B8                 entered_password[j] = '\0';
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0000 00B9                 j = 0;
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00BA                 if (mode == 1) {
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 00BB                     if (password_count < MAX_PASSWORDS) {
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 00BC                         strcpy(passwords[password_count], entered_password);
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00BD                         password_count++;
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 00BE                         delay = mode = 0;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 00BF                     }
; 0000 00C0                     entered_password[0] = '\0';
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 00C1                     continue;
;PCODE: $00000212 VOL: 0
; 0000 00C2                 }
; 0000 00C3                 entered = 0;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 00C4                 for (i = 0; i < password_count; i++)
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 00C5                     if (strcmp(entered_password, passwords[i]) == 0)
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 00C6                         entered = 1;
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
; 0000 00C7 
; 0000 00C8                 if (entered) {
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
; 0000 00C9                     save_progress();
;PCODE: $00000234 VOL: 0
; 0000 00CA                     correct_pass = 1;
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 00CB                     delay_ms(1500);
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 00CC                     correct_pass = 0;
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 00CD                 } else {
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 00CE                     PORTA = PORTC = 0x00;
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 00CF                     PORTB = 0xDD;
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00D0                     delay = 1;
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 00D1                     delay_ms(2000);
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 00D2                 }
;PCODE: $00000246 VOL: 0
; 0000 00D3                 delay = 0;
;PCODE: $00000247 VOL: 0
; 0000 00D4                 entered_password[0] = '\0';
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 00D5             }
; 0000 00D6         }
;PCODE: $0000024A VOL: 0
; 0000 00D7     }
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 00D8 }
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
